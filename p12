import numpy as np
import matplotlib.pyplot as plt
from scipy.linalg import solve

def lowess(x, y, f=0.25, iters=3):
    n, r = len(x), int(np.ceil(f * len(x)))
    yest = np.zeros(n)
    for _ in range(iters):
        for i in range(n):
            w = (1 - (np.abs(x - x[i]) / np.partition(np.abs(x - x[i]), r)[r]) ** 3) ** 3
            A = np.vstack([w, w * x]).dot(np.array([[1, x[i]], [x[i], x[i]**2]]))
            yest[i] = solve(A, w.dot(np.vstack([y, y * x])))[0]
        w = (1 - np.clip(np.abs(y - yest) / (6 * np.median(np.abs(y - yest))), 0, 1) ** 2) ** 2
    return yest

x = np.linspace(0, 2 * np.pi, 100)
y = np.sin(x) + 0.3 * np.random.randn(len(x))
plt.plot(x, y, 'r.', x, lowess(x, y), 'b-')
plt.show()
